name: Build, upload, and publish Arch Linux package
on:
  push:
    tags:
      - '[0-9]*'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: prepare build ctnr
        run: |
          buildah from --name ctnr docker.io/library/archlinux:base-devel

          buildah run ctnr pacman --noconfirm -Syu

          buildah run ctnr useradd -m dev
          buildah run ctnr sh -c 'printf "%s\n" "dev ALL=(ALL) NOPASSWD: ALL" >>/etc/sudoers.d/dev'

          buildah copy --chown dev ctnr libtg_owt /home/dev/libtg_owt
          buildah config -u dev --workingdir /home/dev/libtg_owt ctnr
          buildah run ctnr makepkg --noconfirm -si

          buildah copy --chown dev ctnr telegram-desktop-userfonts /home/dev/telegram-desktop-userfonts
          buildah config -u dev --workingdir /home/dev/telegram-desktop-userfonts ctnr

      - name: build pkg
        run: |
          buildah run ctnr makepkg --noconfirm -s

          buildah run ctnr ls -l

          pkg="$(buildah run ctnr sh -c "printf '%s\n' telegram-desktop-userfonts-*.pkg.*")"
          buildah run ctnr cat "$pkg" >"$pkg"

          echo "PKG=$pkg" >>$GITHUB_ENV

      - name: create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: upload pkg as release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.PKG }}
          asset_name: ${{ env.PKG }}
          asset_content_type: application/zip
